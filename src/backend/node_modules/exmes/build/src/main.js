#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const tmp = require("tmp-promise");
const splitter_1 = require("./splitter");
const merger_1 = require("./merger");
const inputStream_1 = require("./inputStream");
const outputStream_1 = require("./outputStream");
function run() {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const dir = yield tmp.dir({ unsafeCleanup: true });
        console.log('Using temporary directory:', dir.path);
        try {
            const inputStream = new inputStream_1.FileInputStream('sample-file.txt', ' ');
            const splitter = new splitter_1.Splitter({
                maxGroupSize: 1000,
                groupOutputStreamCreator: (index) => new outputStream_1.FileOutputStream(dir.path + '/' + index, ', '),
                comparator: (x, y) => Number(x) - Number(y)
            });
            const groupsInputStreams = yield splitter.splitAndOutputSortedGroups(inputStream);
            const outputStream = new outputStream_1.FileOutputStream('merged-file.txt', ' ');
            const merger = new merger_1.Merger(splitter.options.comparator);
            yield merger.merge(groupsInputStreams, outputStream);
        }
        catch (err) {
            console.log('Error occured while sorting', err);
        }
        finally {
            dir.cleanup();
            console.log('Temporary directory deleted');
        }
    });
}
run();
//# sourceMappingURL=main.js.map