"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ts_heap_1 = require("ts-heap");
class Merger {
    constructor(comparator) {
        this.comparator = comparator;
        this.heap = new ts_heap_1.Heap(({ value: x }, { value: y }) => comparator(x, y));
    }
    merge(inputStreams, outputStream) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.addFirstValuesToHeap(inputStreams);
            while (!this.heap.isEmpty) {
                const { value, inputStreamIndex } = this.heap.pop();
                yield outputStream.write(value);
                const inputStream = inputStreams[inputStreamIndex];
                const nextValue = yield inputStream.read();
                if (nextValue !== null) {
                    this.heap.add({ value: nextValue, inputStreamIndex });
                }
            }
            outputStream.end();
        });
    }
    addFirstValuesToHeap(inputStreams) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            for (let index = 0; index < inputStreams.length; index += 1) {
                const inputStream = inputStreams[index];
                const value = yield inputStream.read();
                this.heap.add({ value, inputStreamIndex: index });
            }
        });
    }
}
exports.Merger = Merger;
//# sourceMappingURL=merger.js.map