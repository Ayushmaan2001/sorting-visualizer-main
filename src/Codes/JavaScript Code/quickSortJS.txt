// In this code we have taken pivot as the last value of range, but you can
// take any value you want

let arr = [1000, 1, 100, 3, 2, 34, 54, 89, 75, 37];


let len = arr.length;

// function to print array
function print(str) {
  
  console.log(str);
  arr.forEach(function(num) {
    console.log(num);
  });
}

// this function will place pivot value at its right position and 
// and all greater value to its right and all lower value to its left
function partition(l, r) {
  
       let j = r;
        for(let i = l; i <= r; i++) {
          
        // if value greater than pivot is at lower position than pivot's
         if(i < j && arr[i] > arr[j]) {
         
          let temp = arr[j];
          arr[j] = arr[i];
          arr[i] = temp;
         }
         
         // if value smaller than pivot is at greater position than pivot's
         else if(i > j && arr[i] < arr[j]) {
         
         let temp = arr[j];
         arr[j] = arr[i];
         arr[i] = temp;
       }
     }
     
     // returning the index of the pivot value
     return j;
}


// quicksort function which recursively call itself and palce elements at their 
// right position
function quickSort(l, r) {
  if(l < r) {
    let partition_index = partition(l, r);
    
    quickSort(l, partition_index - 1);
    quickSort(partition_index + 1, r);
  }
}

// this function call will print the original array
print("Before");

// calling quickSort function 
quickSort(0, len - 1);

// after sorting this function call will print the final array
print("After");
